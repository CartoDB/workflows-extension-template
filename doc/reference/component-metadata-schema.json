{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://carto.com/schemas/workflows-component-metadata.json",
  "title": "CARTO Workflows Component Metadata",
  "description": "Schema for the metadata.json file that defines a component within a CARTO Workflows extension",
  "type": "object",
  "required": [
    "name",
    "title",
    "description",
    "version",
    "icon",
    "cartoEnvVars",
    "inputs",
    "outputs"
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Unique identifier for the component (must match folder name, lowercase, no spaces)",
      "pattern": "^[a-z0-9_]+$",
      "examples": ["add_uuid", "spatial_join"]
    },
    "title": {
      "type": "string",
      "description": "Human-readable title displayed in the UI",
      "minLength": 1,
      "examples": ["Add UUID", "Spatial Join"]
    },
    "description": {
      "type": "string",
      "description": "Brief explanation of what the component does",
      "minLength": 1
    },
    "version": {
      "type": "string",
      "description": "Semantic version number of the component",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "examples": ["1.0.0", "2.1.3"]
    },
    "icon": {
      "type": "string",
      "description": "Filename of the SVG icon in the icons/ folder (40x40px, 4px safe area)",
      "pattern": "^.+\\.svg$",
      "examples": ["component_icon.svg"]
    },
    "externalReference": {
      "type": "object",
      "description": "Optional link to external documentation",
      "required": ["label", "href"],
      "properties": {
        "label": {
          "type": "string",
          "description": "Display text for the link",
          "minLength": 1
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to external documentation"
        }
      },
      "additionalProperties": false
    },
    "cartoEnvVars": {
      "type": "array",
      "description": "Array of CARTO environment variables needed by the component (can be empty)",
      "items": {
        "type": "string",
        "enum": [
          "analyticsToolboxDataset",
          "analyticsToolboxVersion",
          "apiBaseUrl",
          "accessToken",
          "dataExportDefaultGCSBucket",
          "bigqueryProjectId",
          "bigqueryRegion",
          "tempStoragePath"
        ]
      },
      "uniqueItems": true
    },
    "inputs": {
      "type": "array",
      "description": "Array of input parameters the component accepts",
      "items": {
        "oneOf": [
          { "$ref": "#/$defs/TableInput" },
          { "$ref": "#/$defs/ColumnInput" },
          { "$ref": "#/$defs/StringInput" },
          { "$ref": "#/$defs/StringSqlInput" },
          { "$ref": "#/$defs/NumberInput" },
          { "$ref": "#/$defs/BooleanInput" },
          { "$ref": "#/$defs/SelectionInput" },
          { "$ref": "#/$defs/RangeInput" },
          { "$ref": "#/$defs/JsonInput" },
          { "$ref": "#/$defs/GeoJsonInput" },
          { "$ref": "#/$defs/GeoJsonDrawInput" }
        ]
      }
    },
    "outputs": {
      "type": "array",
      "description": "Array of output parameters the component produces",
      "minItems": 1,
      "items": {
        "$ref": "#/$defs/TableOutput"
      }
    }
  },
  "additionalProperties": false,
  "$defs": {
    "GenericInputOptions": {
      "type": "object",
      "description": "Options applicable to all input types",
      "properties": {
        "placeholder": {
          "type": "string",
          "description": "Placeholder text displayed in the input field"
        },
        "optional": {
          "type": "boolean",
          "description": "Whether the input is optional (default: false)"
        },
        "default": {
          "description": "Default value for the input (type varies by input type)"
        },
        "helper": {
          "type": "string",
          "description": "Helper text displayed in a tooltip next to the input"
        },
        "advanced": {
          "type": "boolean",
          "description": "Whether the input appears under 'Advanced options' (default: false)"
        },
        "showIf": {
          "type": "array",
          "description": "Conditions to show this input based on other input values",
          "items": {
            "type": "object",
            "required": ["parameter", "value"],
            "properties": {
              "parameter": {
                "type": "string",
                "description": "Name of another input parameter to check"
              },
              "value": {
                "description": "Value that parameter must have for this input to be shown"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "TableInput": {
      "type": "object",
      "description": "Input connection to a table in the workflow",
      "required": ["name", "title", "type"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Variable name used in stored procedures",
          "pattern": "^[a-z0-9_]+$"
        },
        "title": {
          "type": "string",
          "description": "Display label in the UI",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Optional description of the input"
        },
        "type": {
          "type": "string",
          "const": "Table"
        }
      },
      "additionalProperties": false
    },
    "ColumnInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "parent", "dataType", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "parent": {
              "type": "string",
              "description": "Name of the Table input this column belongs to"
            },
            "dataType": {
              "type": "array",
              "description": "Allowed data types for column selection",
              "items": {
                "type": "string",
                "enum": ["string", "number", "boolean", "geography", "timestamp", "date"]
              },
              "minItems": 1
            },
            "type": {
              "type": "string",
              "const": "Column"
            }
          }
        }
      ]
    },
    "StringInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "mode": {
              "type": "string",
              "enum": ["multiline"],
              "description": "Render as multiline textarea"
            },
            "type": {
              "type": "string",
              "const": "String"
            }
          }
        }
      ]
    },
    "StringSqlInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "StringSql"
            }
          }
        }
      ]
    },
    "NumberInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "min": {
              "type": "number",
              "description": "Minimum allowed value"
            },
            "max": {
              "type": "number",
              "description": "Maximum allowed value"
            },
            "mode": {
              "type": "string",
              "enum": ["slider"],
              "description": "Render as slider instead of number input"
            },
            "type": {
              "type": "string",
              "const": "Number"
            }
          }
        }
      ]
    },
    "BooleanInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "Boolean"
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "SelectionInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type", "options"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "description": "List of selectable options",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "mode": {
              "type": "string",
              "enum": ["multiple"],
              "description": "Allow multiple selections"
            },
            "type": {
              "type": "string",
              "const": "Selection"
            }
          }
        }
      ]
    },
    "RangeInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "Range"
            }
          }
        }
      ]
    },
    "JsonInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "Json"
            }
          }
        }
      ]
    },
    "GeoJsonInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "GeoJson"
            }
          }
        }
      ]
    },
    "GeoJsonDrawInput": {
      "allOf": [
        { "$ref": "#/$defs/GenericInputOptions" },
        {
          "type": "object",
          "required": ["name", "title", "type"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z0-9_]+$"
            },
            "title": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "GeoJsonDraw"
            }
          }
        }
      ]
    },
    "TableOutput": {
      "type": "object",
      "description": "Output table produced by the component",
      "required": ["name", "title", "type"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Variable name used in stored procedures",
          "pattern": "^[a-z0-9_]+$"
        },
        "title": {
          "type": "string",
          "description": "Display label in the UI",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Optional description of the output"
        },
        "type": {
          "type": "string",
          "const": "Table"
        }
      },
      "additionalProperties": false
    }
  }
}
